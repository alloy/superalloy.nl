--- 
title:      Kicker kicks for kicks
created_at: 2009-04-12 17:29:53.984481 +02:00
blog_post:  true
filter:     textile
layout:     post
extension:  html
---

A OS X command line tool which executes commands when a file, or a file in a directory, is modified.

!/images/kikker.jpg!

_Thanks to "Manfred Stienstra":http://manfred.github.com for the project’s mascotte image. Kikker means “frog” in Dutch._

h4. Why?

Not so long ago I had to work on some text formatted as Textile. For this task I had to go back and forth to my text editor and terminal to edit and render the text as HTML. This started to get tedious pretty fast, so being the Ruby _and_ Cocoa head that I am, I quickly whipped up a simple, purpose agnostic, command-line tool which uses the FSEvents API (OS X) to watch for file changes.

_I just love how easy it is to write "small" tools with Ruby and Cocoa that do seemingly "big" things. For another example see "the next blog post":/2009/04/13/js-test-san.html._

h3. Install

After some weeks of usage, and finally implementing the ability to watch multiple paths, I can now say it’s definitely usable. Get it:

<pre><code>$ sudo gem install alloy-kicker -s http://gems.github.com</code></pre>

Now go kick some stuff!

_If you want to checkout the source you can do so on "GitHub":http://github.com/alloy/kicker/tree/master._

h4. Example

Say you’d like to run a Ruby test case every time either the library file, or the test case file is saved. This can be accomplished with the following command:

<pre><code>$ kicker -e "ruby test/unit/article_test.rb" **/article*.rb</code></pre>

From now on whenever you save any file which matches the glob expression, the test case will be ran.

So know you know. Go wild!